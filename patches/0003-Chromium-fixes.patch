From 23b777e45aa9cc7d9f15ff38786936fac3c778dd Mon Sep 17 00:00:00 2001
From: Aubin REBILLAT <rebillat.aubin@gmail.com>
Date: Wed, 29 Aug 2018 13:05:03 -0400
Subject: [PATCH 2/2] chromium-fixes

---
 cc/input/snap_fling_controller.cc                         | 1 +
 .../browser/background_fetch/background_fetch_context.cc  | 2 +-
 .../browser/cache_storage/cache_storage_quota_client.cc   | 1 +
 content/browser/web_package/signed_exchange_handler.cc    | 2 +-
 content/renderer/input/input_event_prediction.cc          | 2 +-
 media/capture/video/video_capture_device_descriptor.cc    | 1 +
 net/nqe/network_quality_estimator.cc                      | 1 +
 .../audio/public/cpp/audio_system_to_service_adapter.cc   | 1 +
 services/network/cross_origin_read_blocking.cc            | 2 ++
 services/network/public/cpp/cors/cors_legacy.cc           | 5 +----
 third_party/blink/renderer/core/frame/local_frame_view.cc | 3 +--
 .../renderer/core/paint/find_properties_needing_update.h  | 4 ++--
 .../renderer/modules/accessibility/ax_layout_object.cc    | 1 +
 .../blink/renderer/modules/webaudio/audio_param.cc        | 1 +
 ui/aura/hit_test_data_provider_aura.cc                    | 8 ++++----
 ui/gfx/ipc/buffer_types/gfx_param_traits.cc               | 2 +-
 base/files/memory_mapped_file.cc                          | 3 ++-
 base/posix/unix_domain_socket.cc                          | 3 ++-
 cc/layers/layer.cc                                        | 3 ++-
 cc/layers/surface_layer_impl.cc                           | 3 +--
 cc/scheduler/compositor_timing_history.cc                 | 3 ++-
 components/autofill/core/common/autofill_regexes.cc       | 2 +-
 .../metrics/call_stack_profile_metrics_provider.cc        | 2 +-
 components/variations/variations_associated_data.cc       | 3 ++-
 content/browser/download/download_item_utils.cc           | 2 +-
 net/dns/host_resolver_impl.cc                             | 3 ++-
 net/http/http_cache_transaction.cc                        | 3 ++-
 net/socket/client_socket_pool_base.cc                     | 3 ++-
 net/socket/socket_bio_adapter.cc                          | 3 ++-
 sql/connection.cc                                         | 3 ++-
 .../blink/renderer/core/frame/local_frame_view.cc         | 12 ++++--------
 .../blink/renderer/core/page/focus_controller.cc          | 4 ++--
 ...ind_paint_offset_and_visual_rect_needing_update.h      | 2 --
 .../core/paint/paint_property_tree_builder.cc             | 3 ---
 .../modules/accessibility/ax_menu_list_popup.cc           | 3 ++-
 .../graphics/highcontrast/highcontrast_classifier.cc      | 3 ---
 .../platform/scheduler/base/task_queue_impl.h             | 2 +-
 .../blink/renderer/platform/wtf/text/text_codec.h         | 6 +++---
 ui/gfx/break_list.h                                       | 3 ++-
 ui/gfx/ipc/skia/gfx_skia_param_traits_macros.h            | 4 ++--
 ui/gfx/render_text.cc                                     | 3 ++-
 16 files changed, 21 insertions(+), 16 deletions(-)

diff --git a/cc/input/snap_fling_controller.cc b/cc/input/snap_fling_controller.cc
index 4c8e485bc..2df10b606 100644
--- a/cc/input/snap_fling_controller.cc
+++ b/cc/input/snap_fling_controller.cc
@@ -27,6 +27,7 @@ bool SnapFlingController::FilterEventForSnap(
       return state_ == State::kActive || state_ == State::kFinished;
     }
   }
+  return false;
 }
 
 void SnapFlingController::ClearSnapFling() {
diff --git a/content/browser/background_fetch/background_fetch_context.cc b/content/browser/background_fetch/background_fetch_context.cc
index 0ddea2614..0c3af7dd4 100644
--- a/content/browser/background_fetch/background_fetch_context.cc
+++ b/content/browser/background_fetch/background_fetch_context.cc
@@ -218,7 +218,7 @@ void BackgroundFetchContext::InitializeController(
 
   scheduler_->AddJobController(controller.get());
 
-  job_controllers_.insert({unique_id, std::move(controller)});
+  job_controllers_[unique_id] = std::move(controller);
   std::move(done_closure).Run();
 }
 
diff --git a/content/browser/cache_storage/cache_storage_quota_client.cc b/content/browser/cache_storage/cache_storage_quota_client.cc
index 50086c0cd..38a4cdbe5 100644
--- a/content/browser/cache_storage/cache_storage_quota_client.cc
+++ b/content/browser/cache_storage/cache_storage_quota_client.cc
@@ -99,6 +99,7 @@ storage::QuotaClient::ID CacheStorageQuotaClient::GetIDFromOwner(
     case CacheStorageOwner::kBackgroundFetch:
       return kBackgroundFetch;
   }
+  return kBackgroundFetch;
 }
 
 }  // namespace content
diff --git a/content/browser/web_package/signed_exchange_handler.cc b/content/browser/web_package/signed_exchange_handler.cc
index 52e127a28..323dcaa44 100644
--- a/content/browser/web_package/signed_exchange_handler.cc
+++ b/content/browser/web_package/signed_exchange_handler.cc
@@ -363,7 +363,7 @@ void SignedExchangeHandler::OnCertVerifyComplete(int result) {
         base::StringPrintf(
             "OCSP check failed. response status: %d, revocation status: %d",
             cert_verify_result_.ocsp_result.response_status,
-            cert_verify_result_.ocsp_result.revocation_status));
+            (int)cert_verify_result_.ocsp_result.revocation_status));
     RunErrorCallback(static_cast<net::Error>(net::ERR_FAILED));
     return;
   }
diff --git a/content/renderer/input/input_event_prediction.cc b/content/renderer/input/input_event_prediction.cc
index 89636c973..b8c89ec98 100644
--- a/content/renderer/input/input_event_prediction.cc
+++ b/content/renderer/input/input_event_prediction.cc
@@ -119,7 +119,7 @@ void InputEventPrediction::UpdateSinglePointer(
     if (predictor != pointer_id_predictor_map_.end()) {
       predictor->second->Update(data);
     } else {
-      pointer_id_predictor_map_.insert({event.id, SetUpPredictor()});
+      pointer_id_predictor_map_[event.id] = std::move(SetUpPredictor());
       pointer_id_predictor_map_[event.id]->Update(data);
     }
   }
diff --git a/media/capture/video/video_capture_device_descriptor.cc b/media/capture/video/video_capture_device_descriptor.cc
index 3a718ed8c..7e28c64ef 100644
--- a/media/capture/video/video_capture_device_descriptor.cc
+++ b/media/capture/video/video_capture_device_descriptor.cc
@@ -93,6 +93,7 @@ const char* VideoCaptureDeviceDescriptor::GetCaptureApiTypeString() const {
     case VideoCaptureApi::UNKNOWN:
       return "Unknown";
   }
+  return "";
 }
 
 std::string VideoCaptureDeviceDescriptor::GetNameAndModel() const {
diff --git a/net/nqe/network_quality_estimator.cc b/net/nqe/network_quality_estimator.cc
index 619c3a10c..7417ea489 100644
--- a/net/nqe/network_quality_estimator.cc
+++ b/net/nqe/network_quality_estimator.cc
@@ -1320,6 +1320,7 @@ base::TimeDelta NetworkQualityEstimator::GetRTTEstimateInternal(
       NOTREACHED();
       return base::TimeDelta();
   }
+  return base::TimeDelta();
 }
 
 int32_t NetworkQualityEstimator::GetDownlinkThroughputKbpsEstimateInternal(
diff --git a/services/audio/public/cpp/audio_system_to_service_adapter.cc b/services/audio/public/cpp/audio_system_to_service_adapter.cc
index 91967b506..84f83049d 100644
--- a/services/audio/public/cpp/audio_system_to_service_adapter.cc
+++ b/services/audio/public/cpp/audio_system_to_service_adapter.cc
@@ -68,6 +68,7 @@ const char* GetTraceEvent(Action action) {
       return "AudioSystemToServiceAdapter::GetInputDeviceInfo";
   }
   NOTREACHED();
+  return "";
 }
 
 void LogUMA(Action action, base::TimeTicks start_time) {
diff --git a/services/network/cross_origin_read_blocking.cc b/services/network/cross_origin_read_blocking.cc
index 7ab93bd47..4c635d737 100644
--- a/services/network/cross_origin_read_blocking.cc
+++ b/services/network/cross_origin_read_blocking.cc
@@ -787,6 +787,7 @@ bool CrossOriginReadBlocking::ResponseAnalyzer::should_allow() const {
     case kBlock:
       return false;
   }
+  return false;
 }
 
 bool CrossOriginReadBlocking::ResponseAnalyzer::should_block() const {
@@ -798,6 +799,7 @@ bool CrossOriginReadBlocking::ResponseAnalyzer::should_block() const {
     case kBlock:
       return true;
   }
+  return true;
 }
 
 void CrossOriginReadBlocking::ResponseAnalyzer::LogBytesReadForSniffing() {
diff --git a/services/network/public/cpp/cors/cors_legacy.cc b/services/network/public/cpp/cors/cors_legacy.cc
index 8f32ac3be..480b3a1bb 100644
--- a/services/network/public/cpp/cors/cors_legacy.cc
+++ b/services/network/public/cpp/cors/cors_legacy.cc
@@ -1,16 +1,13 @@
 // Copyright 2018 The Chromium Authors. All rights reserved.
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
+#include <string>
 
 #include "services/network/public/cpp/cors/cors_legacy.h"
 
 #include <algorithm>
-#include <string>
 #include <vector>
 
-#include "url/gurl.h"
-#include "url/url_util.h"
-
 namespace {
 
 std::vector<std::string>* secure_origins = nullptr;
diff --git a/third_party/blink/renderer/core/frame/local_frame_view.cc b/third_party/blink/renderer/core/frame/local_frame_view.cc
index dd359a726..e56305459 100644
--- a/third_party/blink/renderer/core/frame/local_frame_view.cc
+++ b/third_party/blink/renderer/core/frame/local_frame_view.cc
@@ -5313,8 +5313,7 @@ void LocalFrameView::SetParentVisible(bool visible) {
 void LocalFrameView::Show() {
   if (!IsSelfVisible()) {
     SetSelfVisible(true);
-    if (ScrollingCoordinator* scrolling_coordinator =
-            this->GetScrollingCoordinator()) {
+    if (this->GetScrollingCoordinator()) {
       GetScrollingContext()->SetScrollGestureRegionIsDirty(true);
     }
     SetNeedsCompositingUpdate(kCompositingUpdateRebuildTree);
diff --git a/third_party/blink/renderer/core/paint/find_properties_needing_update.h b/third_party/blink/renderer/core/paint/find_properties_needing_update.h
index 2caa88923..6a167bb21 100644
--- a/third_party/blink/renderer/core/paint/find_properties_needing_update.h
+++ b/third_party/blink/renderer/core/paint/find_properties_needing_update.h
@@ -81,8 +81,8 @@ class FindObjectPropertiesNeedingUpdateScope {
     // Paint offset and paintOffsetTranslation should not change under
     // FindObjectPropertiesNeedingUpdateScope no matter if we needed paint
     // property update.
-    LayoutPoint paint_offset = fragment_data_.PaintOffset();
-    DCHECK_OBJECT_PROPERTY_EQ(object_, &original_paint_offset_, &paint_offset);
+    // LayoutPoint paint_offset = fragment_data_.PaintOffset();
+    // DCHECK_OBJECT_PROPERTY_EQ(object_, &original_paint_offset_, &paint_offset);
     const auto* object_properties = fragment_data_.PaintProperties();
     if (original_properties_ && object_properties) {
       DCHECK_OBJECT_PROPERTY_EQ(object_,
diff --git a/third_party/blink/renderer/modules/accessibility/ax_layout_object.cc b/third_party/blink/renderer/modules/accessibility/ax_layout_object.cc
index 6e03e7a6c..709e05632 100644
--- a/third_party/blink/renderer/modules/accessibility/ax_layout_object.cc
+++ b/third_party/blink/renderer/modules/accessibility/ax_layout_object.cc
@@ -1140,6 +1140,7 @@ AXTextPosition AXLayoutObject::GetTextPosition() const {
     case EVerticalAlign::kSuper:
       return kAXTextPositionSuperscript;
   }
+  return AXNodeObject::GetTextPosition();
 }
 
 int AXLayoutObject::TextLength() const {
diff --git a/third_party/blink/renderer/modules/webaudio/audio_param.cc b/third_party/blink/renderer/modules/webaudio/audio_param.cc
index 14df3dc83..9d2a29c4e 100644
--- a/third_party/blink/renderer/modules/webaudio/audio_param.cc
+++ b/third_party/blink/renderer/modules/webaudio/audio_param.cc
@@ -145,6 +145,7 @@ String AudioParamHandler::GetParamName() const {
     default:
       NOTREACHED();
   }
+  return "";
 }
 
 float AudioParamHandler::Value() {
diff --git a/ui/aura/hit_test_data_provider_aura.cc b/ui/aura/hit_test_data_provider_aura.cc
index 7b5463a49..9937227c1 100644
--- a/ui/aura/hit_test_data_provider_aura.cc
+++ b/ui/aura/hit_test_data_provider_aura.cc
@@ -51,10 +51,10 @@ base::Optional<viz::HitTestRegionList> HitTestDataProviderAura::GetHitTestData(
 
   base::Optional<viz::HitTestRegionList> hit_test_region_list(base::in_place);
   hit_test_region_list->flags =
-      event_targeting_policy ==
-              ui::mojom::EventTargetingPolicy::DESCENDANTS_ONLY
-          ? viz::HitTestRegionFlags::kHitTestIgnore
-          : viz::HitTestRegionFlags::kHitTestMine;
+      (event_targeting_policy) ==
+              (ui::mojom::EventTargetingPolicy::DESCENDANTS_ONLY)
+          ? (uint32_t)viz::HitTestRegionFlags::kHitTestIgnore
+          : (uint32_t)viz::HitTestRegionFlags::kHitTestMine;
   // TODO(crbug.com/805416): Use pixels instead of DIP units for bounds.
   hit_test_region_list->bounds = window_->bounds();
 
diff --git a/ui/gfx/ipc/buffer_types/gfx_param_traits.cc b/ui/gfx/ipc/buffer_types/gfx_param_traits.cc
index 483342692..99f36c102 100644
--- a/ui/gfx/ipc/buffer_types/gfx_param_traits.cc
+++ b/ui/gfx/ipc/buffer_types/gfx_param_traits.cc
@@ -30,7 +30,7 @@ bool ParamTraits<gfx::BufferUsageAndFormat>::Read(
 void ParamTraits<gfx::BufferUsageAndFormat>::Log(
     const gfx::BufferUsageAndFormat& p,
     std::string* l) {
-  l->append(base::StringPrintf("(%d, %d)", p.usage, p.format));
+  l->append(base::StringPrintf("(%d, %d)", (int)p.usage, (int)p.format));
 }
 
 }  // namespace IPC
diff --git a/base/files/memory_mapped_file.cc b/base/files/memory_mapped_file.cc
index ccd9e2366..0d142262c 100644
--- a/base/files/memory_mapped_file.cc
+++ b/base/files/memory_mapped_file.cc
@@ -95,8 +95,9 @@ bool MemoryMappedFile::Initialize(File file,
   if (IsValid())
     return false;
 
-  if (region != Region::kWholeFile)
+  if (region != Region::kWholeFile) {
     DCHECK_GE(region.offset, 0);
+  }
 
   file_ = std::move(file);
 
diff --git a/base/posix/unix_domain_socket.cc b/base/posix/unix_domain_socket.cc
index 7c087a53b..c11f42623 100644
--- a/base/posix/unix_domain_socket.cc
+++ b/base/posix/unix_domain_socket.cc
@@ -215,8 +215,9 @@ ssize_t UnixDomainSocket::RecvMsgWithFlags(int fd,
     // actually received a message.  Unfortunately, Linux allows sending zero
     // length messages, which are indistinguishable from EOF, so this check
     // has false negatives.
-    if (r > 0 || msg.msg_controllen > 0)
+    if (r > 0 || msg.msg_controllen > 0) {
       DCHECK_GE(pid, 0);
+    }
 #endif
 
     *out_pid = pid;
diff --git a/cc/layers/layer.cc b/cc/layers/layer.cc
index c5fb253d8..29a16cd87 100644
--- a/cc/layers/layer.cc
+++ b/cc/layers/layer.cc
@@ -1246,8 +1246,9 @@ void Layer::PushPropertiesTo(LayerImpl* layer) {
   subtree_property_changed_ = false;
   inputs_.update_rect = gfx::Rect();
 
-  if (mask_layer())
+  if (mask_layer()) {
     DCHECK_EQ(bounds().ToString(), mask_layer()->bounds().ToString());
+  }
   layer_tree_host_->RemoveLayerShouldPushProperties(this);
 }
 
diff --git a/cc/layers/surface_layer_impl.cc b/cc/layers/surface_layer_impl.cc
index def528151..1ff8e524c 100644
--- a/cc/layers/surface_layer_impl.cc
+++ b/cc/layers/surface_layer_impl.cc
@@ -131,8 +131,7 @@ viz::SurfaceDrawQuad* SurfaceLayerImpl::CreateSurfaceDrawQuad(
   // allocate a new SharedQuadState. Assign the new SharedQuadState to
   // *|common_shared_quad_state| so that it may be reused by another emitted
   // viz::SurfaceDrawQuad.
-  viz::SharedQuadState* shared_quad_state =
-    shared_quad_state = render_pass->CreateAndAppendSharedQuadState();
+  viz::SharedQuadState* shared_quad_state = render_pass->CreateAndAppendSharedQuadState();
 
   PopulateScaledSharedQuadState(shared_quad_state, device_scale_factor,
                                 device_scale_factor, contents_opaque());
diff --git a/cc/scheduler/compositor_timing_history.cc b/cc/scheduler/compositor_timing_history.cc
index dd4d8f8a9..4a531ec41 100644
--- a/cc/scheduler/compositor_timing_history.cc
+++ b/cc/scheduler/compositor_timing_history.cc
@@ -841,8 +841,9 @@ void CompositorTimingHistory::DidActivate() {
     activate_duration_history_.InsertSample(activate_duration);
 
   // The synchronous compositor doesn't necessarily draw every new active tree.
-  if (!using_synchronous_renderer_compositor_)
+  if (!using_synchronous_renderer_compositor_) {
     DCHECK_EQ(base::TimeTicks(), active_tree_main_frame_time_);
+  }
   active_tree_main_frame_time_ = pending_tree_main_frame_time_;
 
   activate_start_time_ = base::TimeTicks();
diff --git a/components/autofill/core/common/autofill_regexes.cc b/components/autofill/core/common/autofill_regexes.cc
index 3c289e343..2bea371eb 100644
--- a/components/autofill/core/common/autofill_regexes.cc
+++ b/components/autofill/core/common/autofill_regexes.cc
@@ -31,7 +31,7 @@ class AutofillRegexes {
 
  private:
   AutofillRegexes();
-  ~AutofillRegexes();
+  ~AutofillRegexes() __attribute__ ((unused));
 
   // Maps patterns to their corresponding regex matchers.
   std::unordered_map<base::string16, std::unique_ptr<icu::RegexMatcher>>
diff --git a/components/metrics/call_stack_profile_metrics_provider.cc b/components/metrics/call_stack_profile_metrics_provider.cc
index bce2bbbb8..b30bfd2e0 100644
--- a/components/metrics/call_stack_profile_metrics_provider.cc
+++ b/components/metrics/call_stack_profile_metrics_provider.cc
@@ -61,7 +61,7 @@ struct ProfilesState {
                 base::TimeTicks start_timestamp,
                 StackSamplingProfiler::CallStackProfiles profiles);
   ProfilesState(ProfilesState&&);
-  ProfilesState& operator=(ProfilesState&&);
+  ProfilesState& operator=(ProfilesState&&)  __attribute__ ((unused));
 
   // The metrics-related parameters provided to
   // CallStackProfileMetricsProvider::GetProfilerCallback().
diff --git a/components/variations/variations_associated_data.cc b/components/variations/variations_associated_data.cc
index 0dffe8ff6..fd5f0ae96 100644
--- a/components/variations/variations_associated_data.cc
+++ b/components/variations/variations_associated_data.cc
@@ -43,8 +43,9 @@ class GroupMapAccessor {
     // IDs are set.
     if (key == GOOGLE_WEB_PROPERTIES || key == GOOGLE_WEB_PROPERTIES_TRIGGER ||
         key == GOOGLE_WEB_PROPERTIES_SIGNED_IN) {
-      if (key != GOOGLE_WEB_PROPERTIES)
+      if (key != GOOGLE_WEB_PROPERTIES) {
         DCHECK_EQ(EMPTY_ID, GetID(GOOGLE_WEB_PROPERTIES, group_identifier));
+      }
       if (key != GOOGLE_WEB_PROPERTIES_TRIGGER) {
         DCHECK_EQ(EMPTY_ID,
                   GetID(GOOGLE_WEB_PROPERTIES_TRIGGER, group_identifier));
diff --git a/content/browser/download/download_item_utils.cc b/content/browser/download/download_item_utils.cc
index d81bdd7df..30bc74110 100644
--- a/content/browser/download/download_item_utils.cc
+++ b/content/browser/download/download_item_utils.cc
@@ -24,7 +24,7 @@ class DownloadItemData : public base::SupportsUserData::Data,
                      BrowserContext* browser_context,
                      WebContents* web_contents);
   static DownloadItemData* Get(const download::DownloadItem* download_item);
-  static void Detach(download::DownloadItem* download_item);
+  static void Detach(download::DownloadItem* download_item) __attribute__ ((unused));
 
   BrowserContext* browser_context() const { return browser_context_; }
 
diff --git a/net/dns/host_resolver_impl.cc b/net/dns/host_resolver_impl.cc
index bdf16b8ab..a9b433747 100644
--- a/net/dns/host_resolver_impl.cc
+++ b/net/dns/host_resolver_impl.cc
@@ -538,8 +538,9 @@ class PriorityTracker {
     highest_priority_ = static_cast<RequestPriority>(i);
 
     // In absence of requests, default to MINIMUM_PRIORITY.
-    if (total_count_ == 0)
+    if (total_count_ == 0) {
       DCHECK_EQ(MINIMUM_PRIORITY, highest_priority_);
+    }
   }
 
  private:
diff --git a/net/http/http_cache_transaction.cc b/net/http/http_cache_transaction.cc
index 1a9fbedb2..0090ccb36 100644
--- a/net/http/http_cache_transaction.cc
+++ b/net/http/http_cache_transaction.cc
@@ -2989,8 +2989,9 @@ int HttpCache::Transaction::WriteResponseInfoToEntry(bool truncated) {
     return OK;
   }
 
-  if (truncated)
+  if (truncated) {
     DCHECK_EQ(200, response_.headers->response_code());
+  }
 
   // When writing headers, we normally only write the non-transient headers.
   bool skip_transient_headers = true;
diff --git a/net/socket/client_socket_pool_base.cc b/net/socket/client_socket_pool_base.cc
index 8e7fd3822..ec37f6614 100644
--- a/net/socket/client_socket_pool_base.cc
+++ b/net/socket/client_socket_pool_base.cc
@@ -146,8 +146,9 @@ ClientSocketPoolBaseHelper::Request::Request(
       flags_(flags),
       net_log_(net_log),
       socket_tag_(socket_tag) {
-  if (respect_limits_ == ClientSocketPool::RespectLimits::DISABLED)
+  if (respect_limits_ == ClientSocketPool::RespectLimits::DISABLED) {
     DCHECK_EQ(priority_, MAXIMUM_PRIORITY);
+  }
 }
 
 ClientSocketPoolBaseHelper::Request::~Request() {
diff --git a/net/socket/socket_bio_adapter.cc b/net/socket/socket_bio_adapter.cc
index edbd637a9..86c82889c 100644
--- a/net/socket/socket_bio_adapter.cc
+++ b/net/socket/socket_bio_adapter.cc
@@ -348,8 +348,9 @@ void SocketBIOAdapter::CallOnReadReady() {
 SocketBIOAdapter* SocketBIOAdapter::GetAdapter(BIO* bio) {
   DCHECK_EQ(&kBIOMethod, bio->method);
   SocketBIOAdapter* adapter = reinterpret_cast<SocketBIOAdapter*>(bio->ptr);
-  if (adapter)
+  if (adapter) {
     DCHECK_EQ(bio, adapter->bio());
+  }
   return adapter;
 }
 
diff --git a/sql/connection.cc b/sql/connection.cc
index 877ffb502..e1b0782bb 100644
--- a/sql/connection.cc
+++ b/sql/connection.cc
@@ -109,8 +109,9 @@ int BackupDatabase(sqlite3* src, sqlite3* dst, const char* db_name) {
   // If successful, exactly one page should have been backed up.  If
   // this breaks, check this function to make sure assumptions aren't
   // being broken.
-  if (rc == SQLITE_DONE)
+  if (rc == SQLITE_DONE) {
     DCHECK_EQ(pages, 1);
+  }
 
   return rc;
 }
diff --git a/third_party/blink/renderer/core/frame/local_frame_view.cc b/third_party/blink/renderer/core/frame/local_frame_view.cc
index 351ac2782..dd359a726 100644
--- a/third_party/blink/renderer/core/frame/local_frame_view.cc
+++ b/third_party/blink/renderer/core/frame/local_frame_view.cc
@@ -830,8 +830,7 @@ void LocalFrameView::RecalcOverflowAfterStyleChange() {
 
   // Changing overflow should notify scrolling coordinator to ensures that it
   // updates non-fast scroll rects even if there is no layout.
-  if (ScrollingCoordinator* scrolling_coordinator =
-          this->GetScrollingCoordinator()) {
+  if (this->GetScrollingCoordinator()) {
     GetScrollingContext()->SetScrollGestureRegionIsDirty(true);
   }
 
@@ -4122,8 +4121,7 @@ void LocalFrameView::AddScrollableArea(ScrollableArea* scrollable_area) {
     scrollable_areas_ = new ScrollableAreaSet;
   scrollable_areas_->insert(scrollable_area);
 
-  if (ScrollingCoordinator* scrolling_coordinator =
-          this->GetScrollingCoordinator()) {
+  if (this->GetScrollingCoordinator()) {
     ScrollableAreasDidChange();
   }
 }
@@ -4133,8 +4131,7 @@ void LocalFrameView::RemoveScrollableArea(ScrollableArea* scrollable_area) {
     return;
   scrollable_areas_->erase(scrollable_area);
 
-  if (ScrollingCoordinator* scrolling_coordinator =
-          this->GetScrollingCoordinator()) {
+  if (this->GetScrollingCoordinator()) {
     ScrollableAreasDidChange();
   }
 }
@@ -5340,8 +5337,7 @@ void LocalFrameView::Hide() {
           });
     }
     SetSelfVisible(false);
-    if (ScrollingCoordinator* scrolling_coordinator =
-            this->GetScrollingCoordinator()) {
+    if (this->GetScrollingCoordinator()) {
       GetScrollingContext()->SetScrollGestureRegionIsDirty(true);
     }
     SetNeedsCompositingUpdate(kCompositingUpdateRebuildTree);
diff --git a/third_party/blink/renderer/core/page/focus_controller.cc b/third_party/blink/renderer/core/page/focus_controller.cc
index da3d74c21..37fa8efe2 100644
--- a/third_party/blink/renderer/core/page/focus_controller.cc
+++ b/third_party/blink/renderer/core/page/focus_controller.cc
@@ -202,9 +202,9 @@ class ScopedFocusNavigation {
   static ScopedFocusNavigation OwnedByIFrame(const HTMLFrameOwnerElement&,
                                              FocusController::OwnerMap&);
   static HTMLSlotElement* FindFallbackScopeOwnerSlot(const Element&);
-  static bool IsSlotFallbackScoped(const Element&);
+  static bool IsSlotFallbackScoped(const Element&) __attribute__ ((unused));
   static bool IsSlotFallbackScopedForThisSlot(const HTMLSlotElement&,
-                                              const Element&);
+                                              const Element&) __attribute__ ((unused));
 
  private:
   ScopedFocusNavigation(ContainerNode& scoping_root_node,
diff --git a/third_party/blink/renderer/core/paint/find_paint_offset_and_visual_rect_needing_update.h b/third_party/blink/renderer/core/paint/find_paint_offset_and_visual_rect_needing_update.h
index b75179c75..6b135c210 100644
--- a/third_party/blink/renderer/core/paint/find_paint_offset_and_visual_rect_needing_update.h
+++ b/third_party/blink/renderer/core/paint/find_paint_offset_and_visual_rect_needing_update.h
@@ -42,8 +42,6 @@ class FindPaintOffsetNeedingUpdateScope {
   ~FindPaintOffsetNeedingUpdateScope() {
     if (is_actually_needed_)
       return;
-    LayoutPoint paint_offset = fragment_data_.PaintOffset();
-    DCHECK_OBJECT_PROPERTY_EQ(object_, &old_paint_offset_, &paint_offset);
     auto* paint_properties = fragment_data_.PaintProperties();
     const auto* paint_offset_translation =
         paint_properties ? paint_properties->PaintOffsetTranslation() : nullptr;
diff --git a/third_party/blink/renderer/core/paint/paint_property_tree_builder.cc b/third_party/blink/renderer/core/paint/paint_property_tree_builder.cc
index bdf35a040..f60cf7bc9 100644
--- a/third_party/blink/renderer/core/paint/paint_property_tree_builder.cc
+++ b/third_party/blink/renderer/core/paint/paint_property_tree_builder.cc
@@ -2392,17 +2392,14 @@ bool PaintPropertyTreeBuilder::ObjectTypeMightNeedPaintProperties() const {
 }
 
 void PaintPropertyTreeBuilder::UpdatePaintingLayer() {
-  bool changed_painting_layer = false;
   if (object_.HasLayer() &&
       ToLayoutBoxModelObject(object_).HasSelfPaintingLayer()) {
     context_.painting_layer = ToLayoutBoxModelObject(object_).Layer();
-    changed_painting_layer = true;
   } else if (object_.IsColumnSpanAll() ||
              object_.IsFloatingWithNonContainingBlockParent()) {
     // See LayoutObject::paintingLayer() for the special-cases of floating under
     // inline and multicolumn.
     context_.painting_layer = object_.PaintingLayer();
-    changed_painting_layer = true;
   }
   DCHECK(context_.painting_layer == object_.PaintingLayer());
 }
diff --git a/third_party/blink/renderer/modules/accessibility/ax_menu_list_popup.cc b/third_party/blink/renderer/modules/accessibility/ax_menu_list_popup.cc
index 1b6f2ba75..1835156ca 100644
--- a/third_party/blink/renderer/modules/accessibility/ax_menu_list_popup.cc
+++ b/third_party/blink/renderer/modules/accessibility/ax_menu_list_popup.cc
@@ -149,10 +149,11 @@ void AXMenuListPopup::DidUpdateActiveOption(int option_index,
 void AXMenuListPopup::DidHide() {
   AXObjectCacheImpl& cache = AXObjectCache();
   cache.PostNotification(this, AXObjectCacheImpl::kAXHide);
-  if (ActiveDescendant())
+  if (ActiveDescendant()) {
     cache.PostNotification(this, AXObjectCacheImpl::kAXChildrenChanged);
     cache.PostNotification(ActiveDescendant(),
                            AXObjectCacheImpl::kAXMenuListItemUnselected);
+  }
 }
 
 void AXMenuListPopup::DidShow() {
diff --git a/third_party/blink/renderer/platform/graphics/highcontrast/highcontrast_classifier.cc b/third_party/blink/renderer/platform/graphics/highcontrast/highcontrast_classifier.cc
index c9093a9b8..b78910b7b 100644
--- a/third_party/blink/renderer/platform/graphics/highcontrast/highcontrast_classifier.cc
+++ b/third_party/blink/renderer/platform/graphics/highcontrast/highcontrast_classifier.cc
@@ -1127,7 +1127,6 @@ void Inference(
     ,
     FixedAllocations* __restrict fixed) {
   const int32_t input0_shape[] = {1, 4};
-  int32_t logits_MatMul_merged_with_dnn_logits_BiasAdd0_shape[2];
 
   // dnn/hiddenlayer_0/MatMul_merged_with_dnn/hiddenlayer_0/BiasAdd
   FullyConnected<float>(input0_shape, input0,
@@ -1150,8 +1149,6 @@ void Inference(
       dnn_logits_weights_part_0.values, dnn_logits_biases_part_0_shape,
       dnn_logits_biases_part_0.values,
       logits_MatMul_merged_with_dnn_logits_BiasAdd0);
-  logits_MatMul_merged_with_dnn_logits_BiasAdd0_shape[0] = 1;
-  logits_MatMul_merged_with_dnn_logits_BiasAdd0_shape[1] = 1;
 }
 
 }  // namespace highcontrast_tfnative_model
diff --git a/third_party/blink/renderer/platform/scheduler/base/task_queue_impl.h b/third_party/blink/renderer/platform/scheduler/base/task_queue_impl.h
index 471e60bec..2507d71e3 100644
--- a/third_party/blink/renderer/platform/scheduler/base/task_queue_impl.h
+++ b/third_party/blink/renderer/platform/scheduler/base/task_queue_impl.h
@@ -87,7 +87,7 @@ class PLATFORM_EXPORT TaskQueueImpl {
       if (time == other.time) {
         // Debug gcc builds can compare an element against itself.
         DCHECK(sequence_num != other.sequence_num || this == &other);
-        return (sequence_num - other.sequence_num) < 0;
+        return ((this == &other) || (sequence_num - other.sequence_num) < 0);
       }
       return time < other.time;
     }
diff --git a/third_party/blink/renderer/platform/wtf/text/text_codec.h b/third_party/blink/renderer/platform/wtf/text/text_codec.h
index 5bc0c2793..daabf7adf 100644
--- a/third_party/blink/renderer/platform/wtf/text/text_codec.h
+++ b/third_party/blink/renderer/platform/wtf/text/text_codec.h
@@ -68,9 +68,9 @@ enum FlushBehavior {
   kDataEOF
 };
 
-static_assert(!kDoNotFlush, "DoNotFlush should be falsy");
-static_assert(kFetchEOF, "FetchEOF should be truthy");
-static_assert(kDataEOF, "DataEOF should be truthy");
+static_assert(kDoNotFlush == 0, "DoNotFlush should be falsy");
+static_assert(kFetchEOF != 0, "FetchEOF should be truthy");
+static_assert(kDataEOF != 0, "DataEOF should be truthy");
 
 class WTF_EXPORT TextCodec {
   USING_FAST_MALLOC(TextCodec);
diff --git a/ui/gfx/break_list.h b/ui/gfx/break_list.h
index cb3de2b76..de202627d 100644
--- a/ui/gfx/break_list.h
+++ b/ui/gfx/break_list.h
@@ -166,8 +166,9 @@ void BreakList<T>::CheckBreaks() {
     DCHECK_LT(breaks_[i].first, breaks_[i + 1].first) << "Break out of order.";
     DCHECK_NE(breaks_[i].second, breaks_[i + 1].second) << "Redundant break.";
   }
-  if (max_ > 0)
+  if (max_ > 0) {
     DCHECK_LT(breaks_.back().first, max_) << "Break beyond max position.";
+  }
 }
 #endif
 
diff --git a/ui/gfx/ipc/skia/gfx_skia_param_traits_macros.h b/ui/gfx/ipc/skia/gfx_skia_param_traits_macros.h
index e48af3f0a..5f5b5c3e3 100644
--- a/ui/gfx/ipc/skia/gfx_skia_param_traits_macros.h
+++ b/ui/gfx/ipc/skia/gfx_skia_param_traits_macros.h
@@ -10,7 +10,7 @@
 #include "ipc/ipc_message_macros.h"
 #include "third_party/skia/include/core/SkImageInfo.h"
 
-IPC_ENUM_TRAITS_VALIDATE(SkColorType, kLastEnum_SkColorType);
-IPC_ENUM_TRAITS_VALIDATE(SkAlphaType, kLastEnum_SkAlphaType);
+IPC_ENUM_TRAITS_VALIDATE(SkColorType, kLastEnum_SkColorType != 0);
+IPC_ENUM_TRAITS_VALIDATE(SkAlphaType, kLastEnum_SkAlphaType != 0);
 
 #endif  // UI_GFX_IPC_SKIA_GFX_SKIA_PARAM_TRAITS_MACROS_H_
diff --git a/ui/gfx/render_text.cc b/ui/gfx/render_text.cc
index 39702db77..11c24a6d6 100644
--- a/ui/gfx/render_text.cc
+++ b/ui/gfx/render_text.cc
@@ -1244,8 +1244,9 @@ HorizontalAlignment RenderText::GetCurrentHorizontalAlignment() {
 
 Vector2d RenderText::GetAlignmentOffset(size_t line_number) {
   // TODO(ckocagil): Enable |lines_| usage on RenderTextMac.
-  if (MultilineSupported() && multiline_)
+  if (MultilineSupported() && multiline_) {
     DCHECK_LT(line_number, lines_.size());
+  }
   Vector2d offset;
   HorizontalAlignment horizontal_alignment = GetCurrentHorizontalAlignment();
   if (horizontal_alignment != ALIGN_LEFT) {
--- a/chrome/test/BUILD.gn	2018-08-24 12:45:31.929527483 -0400
+++ b/chrome/test/BUILD.gn	2018-08-24 12:43:30.926082904 -0400
@@ -3692,7 +3692,7 @@
       "//ui/wm",
     ]
   }
-  if (!is_chromeos && is_linux) {
+  if (!is_chromeos && is_linux && !use_aura) {
     sources += [
       "../browser/password_manager/native_backend_kwallet_x_unittest.cc",
       "../browser/shell_integration_linux_unittest.cc",
-- 
2.17.1

